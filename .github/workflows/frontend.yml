name: Frontend Ci/CD

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - staging
    paths:
      - 'frontend/**'

jobs:
  build_and_release:
    name: Build and Release Docker Image
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine config file and image tag suffix
        id: config
        run: |
          if [ "${{ github.ref_name }}" = "staging" ]; then
            echo "config_file=infra/configs/frontend-vm-staging.json" >> $GITHUB_OUTPUT
            echo "tag_suffix=-staging" >> $GITHUB_OUTPUT
          else
            echo "config_file=infra/configs/frontend-vm.json" >> $GITHUB_OUTPUT
            echo "tag_suffix=" >> $GITHUB_OUTPUT
          fi

      - name: Build and push frontend Docker image
        id: build-frontend
        run: |
          IMAGE_TAG=ghcr.io/${{ github.repository_owner }}/frontend${{ steps.config.outputs.tag_suffix }}:$(date +'%Y%m%d%H%M%S')
          docker build -t $IMAGE_TAG --target=frontend ./frontend
          docker push $IMAGE_TAG
          echo "image=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Update JSON config file with new image tags
        run: |
          CONFIG_FILE=${{ steps.config.outputs.config_file }}
          FRONTEND_IMAGE=${{ steps.build-frontend.outputs.image }}

          git fetch origin config
          git checkout -B config origin/config

          cp $CONFIG_FILE $CONFIG_FILE.bak

          jq --arg frontend "$FRONTEND_IMAGE" '(.containers[] | select(.name == "frontend") | .image) = $frontend | .lastUpdated = (now | strftime("%Y-%m-%dT%H:%M:%SZ"))' "$CONFIG_FILE" > "$CONFIG_FILE.tmp" && mv "$CONFIG_FILE.tmp" "$CONFIG_FILE"

          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add $CONFIG_FILE

          if ! git diff --cached --quiet; then
            git commit -m "Update frontend image for ${{ github.ref_name }} branch"
            git push origin HEAD:config
          else
            echo "No config changes detected."
          fi
